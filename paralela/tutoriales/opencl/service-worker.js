"use strict";var precacheConfig=[["/paradigmas-de-programacion/index.html","6158bc1a68ecbf2582d45f6a48a7934e"],["/paradigmas-de-programacion/static/css/main.a2d8adcc.css","c988fbd21efddd6168940955bce958a1"],["/paradigmas-de-programacion/static/js/main.a5c76cf8.js","f4636de785e8c6d0d6385535bc1b6801"],["/paradigmas-de-programacion/static/media/AMD_Install_1.c47456cb.png","c47456cb56527ef051c9a22a559e6535"],["/paradigmas-de-programacion/static/media/AMD_Install_2.a70cf157.png","a70cf157cc89eda3b1fd8cf916f16ceb"],["/paradigmas-de-programacion/static/media/AMD_Install_3.90b90f24.png","90b90f24173ebd97a8165b0cc5336bfa"],["/paradigmas-de-programacion/static/media/Finish.f0969f70.jpg","f0969f70d4fcbc3f4d04234f6fc542d2"],["/paradigmas-de-programacion/static/media/Intel_Install_1.baf3ebed.png","baf3ebed3b8c5578fac05af63adc8c4e"],["/paradigmas-de-programacion/static/media/Intel_Install_2.fbb800ce.png","fbb800cea4e6f59d792e43cc07fd5694"],["/paradigmas-de-programacion/static/media/Intel_Install_3.b30371ec.png","b30371ecc4c63866e1e823e9890b71f4"],["/paradigmas-de-programacion/static/media/Intel_Install_4.96c5680b.png","96c5680bfdec9fd1f89fe2a961f98d4c"],["/paradigmas-de-programacion/static/media/LogoIntel.1a389043.png","1a389043511112833ac028eaaa6e9a4f"],["/paradigmas-de-programacion/static/media/LogoKhronos.aaf89b77.svg","aaf89b77b2cb8d8c77f41cc30d6b2131"],["/paradigmas-de-programacion/static/media/LogoNVIDIA.6df47051.png","6df47051d86d3db4c49a2dcc7634c0d1"],["/paradigmas-de-programacion/static/media/LogoOpenCL.47514fde.png","47514fde4a8e98832f6e1b80ebd16d6c"]],cacheName="sw-precache-v3-sw-precache-webpack-plugin-"+(self.registration?self.registration.scope:""),ignoreUrlParametersMatching=[/^utm_/],addDirectoryIndex=function(e,a){var t=new URL(e);return"/"===t.pathname.slice(-1)&&(t.pathname+=a),t.toString()},cleanResponse=function(a){return a.redirected?("body"in a?Promise.resolve(a.body):a.blob()).then(function(e){return new Response(e,{headers:a.headers,status:a.status,statusText:a.statusText})}):Promise.resolve(a)},createCacheKey=function(e,a,t,n){var r=new URL(e);return n&&r.pathname.match(n)||(r.search+=(r.search?"&":"")+encodeURIComponent(a)+"="+encodeURIComponent(t)),r.toString()},isPathWhitelisted=function(e,a){if(0===e.length)return!0;var t=new URL(a).pathname;return e.some(function(e){return t.match(e)})},stripIgnoredUrlParameters=function(e,t){var a=new URL(e);return a.hash="",a.search=a.search.slice(1).split("&").map(function(e){return e.split("=")}).filter(function(a){return t.every(function(e){return!e.test(a[0])})}).map(function(e){return e.join("=")}).join("&"),a.toString()},hashParamName="_sw-precache",urlsToCacheKeys=new Map(precacheConfig.map(function(e){var a=e[0],t=e[1],n=new URL(a,self.location),r=createCacheKey(n,hashParamName,t,/\.\w{8}\./);return[n.toString(),r]}));function setOfCachedUrls(e){return e.keys().then(function(e){return e.map(function(e){return e.url})}).then(function(e){return new Set(e)})}self.addEventListener("install",function(e){e.waitUntil(caches.open(cacheName).then(function(n){return setOfCachedUrls(n).then(function(t){return Promise.all(Array.from(urlsToCacheKeys.values()).map(function(a){if(!t.has(a)){var e=new Request(a,{credentials:"same-origin"});return fetch(e).then(function(e){if(!e.ok)throw new Error("Request for "+a+" returned a response with status "+e.status);return cleanResponse(e).then(function(e){return n.put(a,e)})})}}))})}).then(function(){return self.skipWaiting()}))}),self.addEventListener("activate",function(e){var t=new Set(urlsToCacheKeys.values());e.waitUntil(caches.open(cacheName).then(function(a){return a.keys().then(function(e){return Promise.all(e.map(function(e){if(!t.has(e.url))return a.delete(e)}))})}).then(function(){return self.clients.claim()}))}),self.addEventListener("fetch",function(a){if("GET"===a.request.method){var e,t=stripIgnoredUrlParameters(a.request.url,ignoreUrlParametersMatching),n="index.html";(e=urlsToCacheKeys.has(t))||(t=addDirectoryIndex(t,n),e=urlsToCacheKeys.has(t));var r="/paradigmas-de-programacion/index.html";!e&&"navigate"===a.request.mode&&isPathWhitelisted(["^(?!\\/__).*"],a.request.url)&&(t=new URL(r,self.location).toString(),e=urlsToCacheKeys.has(t)),e&&a.respondWith(caches.open(cacheName).then(function(e){return e.match(urlsToCacheKeys.get(t)).then(function(e){if(e)return e;throw Error("The cached response that was expected is missing.")})}).catch(function(e){return console.warn('Couldn\'t serve response for "%s" from cache: %O',a.request.url,e),fetch(a.request)}))}});